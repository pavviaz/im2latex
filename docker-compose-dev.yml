# export CELERY_BROKER_URL=amqp://admin:admin@localhost:5672/ CELERY_RESULT_BACKEND=redis://localhost:6379/0

services:
  minio:
    image: minio/minio:latest
    container_name: minio

    ports:
      - "${MINIO_API_PORT}:${MINIO_API_PORT}"  # api
      - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}"  # console

    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}

    volumes:
      - ./minio_data:/data
      - ./minio_config:/root/.minio

    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"

  redis:
    restart: "no"
    mem_limit: 1G
    container_name: redis_backend

    image: redis:6.2-alpine
    
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PORT_NUMBER=${REDIS_PORT}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

  rabbitmq:
    restart: "no"
    mem_limit: 2G
    container_name: rabbitmq_broker

    image: "rabbitmq:3-management"

    ports:
      - "${RABBITMQ_AMQP_PORT}:${RABBITMQ_AMQP_PORT}"  # api
      - "${RABBITMQ_CONSOLE_PORT}:${RABBITMQ_CONSOLE_PORT}"  # console

    volumes:
      - ./rabbitmq-data:/var/lib/rabbitmq/mnesia
      - ./rabbit_conf/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

    environment:
      RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_LOGIN}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}

  # worker:
  #   restart: "no"
  #   mem_limit: 8G
  #   container_name: worker

  #   build: 
  #     context: ./neural_worker
  #     dockerfile: Dockerfile
  #   # command: bash -c "celery -A celery_services worker -l info -E -c 1 --loglevel=info"
  #   command: bash -c "celery -A celery_services worker -l info -E -P solo --loglevel=info"

  #   environment:
  #     - CELERY_BROKER_URL=${RABBITMQ_IP}
  #     - CELERY_RESULT_BACKEND=${REDIS_IP}
  #     - OPENAI_KEY=${OPENAI_KEY}
      
  #   depends_on:
  #     - redis
  #     - rabbitmq
      
  # celery-flower:
  #   image: mher/flower:0.9.7
  #   command: ['flower', '--broker=${RABBITMQ_IP}']

  #   environment:
  #     - FLOWER_PORT=5555

  #   ports:
  #     - 5555:5555
  #   depends_on:
  #     - rabbitmq

  backend:
    restart: "no"
    mem_limit: 4G
    container_name: backend_api

    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: bash -c "uvicorn api.api:app --host 0.0.0.0 --port ${API_PORT}"

    volumes:
      - ./backend:/backend

    env_file:
      - ./.env

    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      # - celery-flower
      # - worker
      - rabbitmq

  postgres:
    restart: always
    container_name: postgres
    mem_limit: 100m
    image: postgres:13.3

    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"

    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata

    command: "-p ${POSTGRES_PORT}"
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
